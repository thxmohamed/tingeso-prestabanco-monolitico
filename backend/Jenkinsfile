pipeline {
    agent any
    tools {
        maven "maven"
    }
    environment {
        DB_HOST = "192.168.1.10"
        DB_USER = "root2"
        DB_PASSWORD = "mohamed123"
    }
    stages {
        stage("Clone Repository") {
            steps {
                checkout scmGit(branches: [[name: '*/main']],
                                userRemoteConfigs: [[url: 'https://github.com/thxmohamed/Tingeso']])
            }
        }

        stage("Configure CORS in Backend") {
            steps {
                dir("backend/src/main/java/com/yourcompany/backend") { // Ajusta la ruta según la estructura del proyecto
                    // Crear un archivo de configuración CORS para Spring Boot (si estás usando Spring)
                    writeFile file: 'CorsConfig.java', text: '''\
                    package com.yourcompany.backend;

                    import org.springframework.context.annotation.Bean;
                    import org.springframework.context.annotation.Configuration;
                    import org.springframework.web.servlet.config.annotation.CorsRegistry;
                    import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;

                    @Configuration
                    public class CorsConfig implements WebMvcConfigurer {
                        @Override
                        public void addCorsMappings(CorsRegistry registry) {
                            registry.addMapping("/**")
                                    .allowedOrigins("*")
                                    .allowedMethods("GET", "POST", "PUT", "DELETE", "OPTIONS");
                        }
                    }
                    '''
                }
            }
        }

        stage("Build JAR File") {
            steps {
                dir("backend") {
                    bat "mvn clean package"
                }
            }
        }

        stage("Test") {
            steps {
                dir("backend") {
                    bat "mvn test"
                }
            }
        }
        stage("Build and Push Docker Image") {
            steps {
                dir("backend") {
                    script {
                        withDockerRegistry(credentialsId: 'docker-credentials') {
                            withCredentials([string(credentialsId: 'docker-credentials', variable: 'DOCKER_PASS')]) {
                                bat """
                                    echo $DOCKER_PASS | docker login -u thxmohamed --password-stdin
                                    docker build -t thxmohamed/backend-container .
                                    docker push thxmohamed/backend-container
                                """
                            }
                        }
                    }
                }
            }
        }
    }
}
